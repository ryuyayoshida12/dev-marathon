name: ssh command
on:
  push:
    branches:
      - develop
      - main
jobs:
  staging-test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - id: staging-ssh
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
          SSH_PORT: ${{ secrets.DEV_SSH_PORT }}
          SSH_USER: ${{ secrets.DEV_SSH_USER }}
          SSH_KEY: ${{ secrets.DEV_SSHE_SSH_KEY }}
      - run: |
          ssh ${{ steps.staging-ssh.outputs.SERVER }} "
            export SESSION_SECRET='${{ secrets.SESSION_SECRET }}' &&
            export POSTGRES_USER='${{ secrets.POSTGRES_USER }}' &&
            export POSTGRES_DB='${{ secrets.POSTGRES_DB }}' &&
            export POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}' &&
            export POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' &&
            cd /app/ryuya_yoshida &&
            bash deploy.sh ryuya_yoshida
          "
  production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - id: staging-ssh
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
          SSH_PORT: ${{ secrets.DEV_SSH_PORT }}
          SSH_USER: ${{ secrets.DEV_SSH_USER }}
          SSH_KEY: ${{ secrets.DEV_SSHE_SSH_KEY }}
      - run: |
          ssh ${{ steps.staging-ssh.outputs.SERVER }} "
            export SESSION_SECRET='${{ secrets.SESSION_SECRET }}' &&
            export POSTGRES_USER='${{ secrets.POSTGRES_USER }}' &&
            export POSTGRES_DB='${{ secrets.POSTGRES_DB }}' &&
            export POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}' &&
            export POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' &&
            cd /app/ryuya_yoshida &&
            bash deploy.sh ryuya_yoshida
          "

      - id: prod-ssh
        name: deploy-production
        if: success() #前のステップ(cypressテスト)成功時のみ実行
        uses: webfactory/ssh-agent@v0.7.0
        with:
         ssh-private-key: ${{ secrets.PROD_SSHE_SSH_KEY }}
      - name: Run deploy script
        run: |
         ssh -o StrictHostKeyChecking=no \
          ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_SSH_HOST }} "
          export SESSION_SECRET='${{ secrets.SESSION_SECRET }}' &&
          export POSTGRES_USER='${{ secrets.POSTGRES_USER }}' &&
          export POSTGRES_DB='${{ secrets.POSTGRES_DB }}' &&
          export POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}' &&
          export POSTGRES_PASSWORD='${{ secrets.PROD_POSTGRES_PASSWORD }}' &&
          cd /app/${{ secrets.PROD_SSH_USER }} &&
          bash deploy.sh ${{ secrets.PROD_SSH_USER }}
         "


      #   uses: invi5H/ssh-action@v1
      #   with:
      #     SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
      #     SSH_PORT: ${{ secrets.PROD_SSH_PORT }}
      #     SSH_USER: ${{ secrets.PROD_SSH_USER }}
      #     SSH_KEY: ${{ secrets.PROD_SSHE_SSH_KEY }}
      # - run: echo "prod server = ${{ steps.prod-ssh.outputs.SERVER }}"
      #   if: always()
      # - run: |
      #     ssh ${{ steps.prod-ssh.outputs.SERVER }} "
      #       export SESSION_SECRET='${{ secrets.SESSION_SECRET }}' &&
      #       export POSTGRES_USER='${{ secrets.POSTGRES_USER }}' &&
      #       export POSTGRES_DB='${{ secrets.POSTGRES_DB }}' &&
      #       export POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}' &&
      #       export POSTGRES_PASSWORD='${{ secrets.PROD_POSTGRES_PASSWORD }}' &&
      #       cd /app/ryuya_yoshida &&
      #       bash deploy.sh ryuya_yoshida
      #   "


      # - name: Setup SSH Agent
      #   uses: webfactory/ssh-agent@v0.7.0
      #   with:
      #     ssh-private-key: ${{ secrets.DEV_SSHE_SSH_KEY }}
      # - name: Run deploy script
      #   run: ssh -o StrictHostKeyChecking=no ${{ secrets.DEV_SSH_USER }}@${{ secrets.DEV_SSH_HOST }} bash /app/${{ secrets.DEV_SSH_USER }}/deploy.sh ${{ secrets.DEV_SSH_USER }}
